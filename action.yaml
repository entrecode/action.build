name: Build-Action
description: 'build and push to ghcr'

inputs:
  NAMESPACE:
    description: 'Namespace'
    required: true
  NAME:
    description: 'Name'
    required: true
  ACTION_ENABLE_TESTING:
    description: 'if set to true, testcontainer will be created and tests will be run'
    required: false
    default: 'false'
  PAT:  
    description: 'PAT from repo'
    required: true
  REPOSITORY:
    description: 'Git-Repository'
    required: true

outputs:
  version:
    description: 'version of the container'
    value: ${{ steps.set-output.outputs.version }}
  env:
    description: 'environment of the container'
    value: ${{ steps.set-output.outputs.env }}

runs:
  using: 'composite'
  steps:
  - name: Checkout code
    uses: actions/checkout@v3

  - name: Login to Github Registry
    uses: docker/login-action@v2
    with:
      registry: ghcr.io
      username: ${{ github.repository_owner }}
      password: ${{ inputs.PAT }}

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v2

  - name: get-npm-version
    id: package-version
    uses: martinbeentjes/npm-get-version-action@main

  - name: Build Container name for develop
    # if: github.ref == 'refs/heads/develop'
    run: |
      echo "IMAGE_TAG=${{ steps.package-version.outputs.current-version}}-dev" >> $GITHUB_ENV
      echo "ENV=stage" >> $GITHUB_ENV
    shell: bash

  # - name: Build Container name for master
  #   if: github.ref != 'refs/heads/develop'
  #   run: |
  #     echo "IMAGE_TAG=${{ steps.package-version.outputs.current-version}}" >> $GITHUB_ENV
  #     echo "ENV=prod" >> $GITHUB_ENV
  #   shell: bash

  - name: test ACTION_ENABLE_TESTING
    run: |
      echo "ACTION_ENABLE_TESTING=${{ inputs.ACTION_ENABLE_TESTING }}"
    shell: bash

  - name: Set up docker buildx for tester
    if: inputs.ACTION_ENABLE_TESTING === 'true'
    id: tester
    uses: docker/build-push-action@v3
    with:
      context: .
      file: ./Dockerfile
      push: true
      target: tester
      tags: ghcr.io/${{ inputs.REPOSITORY }}:tester
      cache-from: type=gha
      cache-to: type=gha,mode=max
      build-args: |
       PAT=${{ inputs.PAT }}

  - name: Test
    if: ${{ inputs.ACTION_ENABLE_TESTING }} === 'true' && steps.tester.outcome == 'success'
    id: testrunner
    run: |
      docker run --rm ghcr.io/${{ inputs.REPOSITORY }}:tester 
    shell: bash

  - name: Build and push
    if: ${{ inputs.ACTION_ENABLE_TESTING }} == 'false' || steps.testrunner.outcome == 'success'
    uses: docker/build-push-action@v3
    with:
      context: .
      file: ./Dockerfile
      push: true
      target: runner
      tags: ghcr.io/${{ inputs.REPOSITORY }}:${{ env.IMAGE_TAG }}
      cache-from: type=gha
      cache-to: type=gha,mode=max
      build-args: |
        PAT=${{ inputs.PAT }}

  - name: Set output
    id: set-output
    run: |
      echo "version=${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT
      echo "env=${{ env.ENV }}" >> $GITHUB_OUTPUT
    shell: bash
